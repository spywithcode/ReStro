{
  "info": {
    "name": "Restaurant Management API - JWT Auth",
    "description": "Complete API collection for testing JWT authentication and restaurant management endpoints",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "variable": [
    {
      "key": "baseUrl",
      "value": "http://localhost:3000",
      "type": "string"
    },
    {
      "key": "jwtToken",
      "value": "",
      "type": "string",
      "description": "JWT token from login response"
    }
  ],
  "item": [
    {
      "name": "Authentication",
      "item": [
        {
          "name": "Register Admin",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test Restaurant Owner\",\n  \"email\": \"owner@testrestaurant.com\",\n  \"password\": \"testpassword123\",\n  \"mobile\": \"+1234567890\",\n  \"role\": \"admin\",\n  \"restaurantName\": \"Test Restaurant\",\n  \"restaurantDescription\": \"A test restaurant for API testing\",\n  \"restaurantAddress\": \"123 Test Street, Test City, TC 12345\",\n  \"restaurantPhone\": \"+1234567890\",\n  \"restaurantEmail\": \"contact@testrestaurant.com\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "register"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Response has user data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.user).to.be.an('object');",
                  "    pm.expect(jsonData.user.email).to.eql('owner@testrestaurant.com');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Register Customer",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Test Customer\",\n  \"email\": \"customer@testrestaurant.com\",\n  \"password\": \"customer123\",\n  \"mobile\": \"+1987654321\",\n  \"role\": \"customer\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/register",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "register"]
            }
          }
        },
        {
          "name": "Login Admin",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"owner@testrestaurant.com\",\n  \"password\": \"testpassword123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has JWT token\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.token).to.be.a('string');",
                  "    pm.collectionVariables.set('jwtToken', jsonData.token);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Login Customer",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"customer@testrestaurant.com\",\n  \"password\": \"customer123\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            }
          }
        },
        {
          "name": "Verify Token",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwtToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/verify",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "verify"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has user data\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData.user).to.be.an('object');",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Logout",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwtToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/auth/logout",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "logout"]
            }
          }
        }
      ]
    },
    {
      "name": "Restaurant Management",
      "item": [
        {
          "name": "Get All Restaurants",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/restaurants",
              "host": ["{{baseUrl}}"],
              "path": ["api", "restaurants"]
            }
          }
        },
        {
          "name": "Create Restaurant",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwtToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": \"test-rest-001\",\n  \"name\": \"Test Restaurant\",\n  \"description\": \"A test restaurant for API testing\",\n  \"address\": \"123 Test Street, Test City, TC 12345\",\n  \"phone\": \"+1234567890\",\n  \"email\": \"contact@testrestaurant.com\",\n  \"imageUrl\": \"https://example.com/restaurant.jpg\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/restaurants",
              "host": ["{{baseUrl}}"],
              "path": ["api", "restaurants"]
            }
          }
        }
      ]
    },
    {
      "name": "Menu Management",
      "item": [
        {
          "name": "Get Menu Items",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwtToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/menu",
              "host": ["{{baseUrl}}"],
              "path": ["api", "menu"]
            }
          }
        },
        {
          "name": "Create Menu Item",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwtToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Margherita Pizza\",\n  \"description\": \"Classic pizza with tomato sauce, mozzarella, and fresh basil\",\n  \"price\": 12.99,\n  \"category\": \"Main Course\",\n  \"imageUrl\": \"https://example.com/pizza.jpg\",\n  \"isAvailable\": true\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/menu",
              "host": ["{{baseUrl}}"],
              "path": ["api", "menu"]
            }
          }
        }
      ]
    },
    {
      "name": "Order Management",
      "item": [
        {
          "name": "Get Orders",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwtToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/orders",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders"]
            }
          }
        },
        {
          "name": "Create Order",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwtToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"tableNumber\": 1,\n  \"items\": [\n    {\n      \"menuItemId\": \"menu-1234567890\",\n      \"quantity\": 2,\n      \"name\": \"Margherita Pizza\",\n      \"price\": 12.99\n    }\n  ],\n  \"customer\": {\n    \"name\": \"John Doe\",\n    \"email\": \"john@example.com\",\n    \"phone\": \"+1234567890\"\n  }\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/orders",
              "host": ["{{baseUrl}}"],
              "path": ["api", "orders"]
            }
          }
        }
      ]
    },
    {
      "name": "Table Management",
      "item": [
        {
          "name": "Get Tables",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{jwtToken}}"
              }
            ],
            "url": {
              "raw": "{{baseUrl}}/api/tables",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tables"]
            }
          }
        },
        {
          "name": "Create Table",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              },
              {
                "key": "Authorization",
                "value": "Bearer {{jwtToken}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"id\": 1,\n  \"capacity\": 4,\n  \"status\": \"Available\",\n  \"qrCode\": \"https://example.com/qr/1\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/tables",
              "host": ["{{baseUrl}}"],
              "path": ["api", "tables"]
            }
          }
        }
      ]
    },
    {
      "name": "Error Testing",
      "item": [
        {
          "name": "Invalid Login",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"wrong@email.com\",\n  \"password\": \"wrongpassword\"\n}"
            },
            "url": {
              "raw": "{{baseUrl}}/api/auth/login",
              "host": ["{{baseUrl}}"],
              "path": ["api", "auth", "login"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 401\", function () {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ]
              }
            }
          ]
        },
        {
          "name": "Access Protected Route Without Token",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseUrl}}/api/menu",
              "host": ["{{baseUrl}}"],
              "path": ["api", "menu"]
            }
          },
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 401\", function () {",
                  "    pm.response.to.have.status(401);",
                  "});"
                ]
              }
            }
          ]
        }
      ]
    }
  ]
}
